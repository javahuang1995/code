package cn.it.shop.action;

import java.util.HashMap;
import java.util.List;

import org.springframework.context.annotation.Scope;
import org.springframework.stereotype.Controller;

import cn.it.shop.model.Category;

@Controller("categoryAction")
@Scope("prototype")
public class CategoryAction extends BaseAction<Category> {
	/**
	 * 
	 */
	private static final long serialVersionUID = -6445830341919409852L;

	public String queryJoinAccount() {

		// 用来存储分页的数据
		pageMap = new HashMap<String, Object>();

		// 根据关键字和分页的参数查询相应的数据。这个方法我们在Service中写过了，当时完成级联查询
		List<Category> categoryList = categoryService.queryJoinAccount(
				model.getType(), page, rows);
		pageMap.put("rows", categoryList); // 存储为JSON格式，从上一节的json文件可以看出，一个key是total,一个key是rows，这里先把rows存放好
		System.out.println(categoryList);
		// 根据关键字查询总记录数
		Long total = categoryService.getCount(model.getType()); // 这个方法没写，我们等会儿去Service层完善一下
		System.out.println(total);
		pageMap.put("total", total); // 存储为JSON格式，再把total存放好

		return "jsonMap";
	}

	public String update() {
		System.out.println("----update----");
		System.out.println(categoryService);// 由于已经和Spring整合，所以可以拿到这个categoryService了，打印出来就不是null了
		categoryService.update(model); // 新加一条语句，来更新数据库
		return "index";
	}

	public String save() {
		System.out.println("----save----");
		System.out.println(categoryService);// 整合前后输出不同
		System.out.println(model);
		return "index";
	}

	public String query() {
		// 解决方案一，采用相应的map取代原来的内置对象，这样与jsp没有依赖，但是代码量比较大
		// ActionContext.getContext().put("categoryList",
		// categoryService.query()); //放到request域中
		// ActionContext.getContext().getSession().put("categoryList",
		// categoryService.query()); //放到session域中
		// ActionContext.getContext().getApplication().put("categoryList",
		// categoryService.query()); //放到application域中

		// 解决方案二，实现相应的接口(RequestAware,SessionAware,ApplicationAware)，让相应的map注入
		request.put("categoryList", categoryService.query());
		session.put("categoryList", categoryService.query());
		application.put("categoryList", categoryService.query());
		return "index";
	}
}